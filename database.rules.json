{
  "rules": {
    "donations": {
      "cash": {
        ".read": "auth.token.coordinator === true",
        "$push_id": {
          ".write": "!data.exists() && root.child('donations').child('tokens').child(newData.child('token').val()).child('valid').val() === true"
        }
      }
    },
    "original": {
      ".read": "auth.token.coordinator === true",
      "$list": {
        ".indexOn": ["soundQualityReporting/status"],
        "$fileName": {
          "notes": {
            ".write": "auth.token.coordinator === true"
          },
          "contentReporting": {
            "timestampGiven": {
              ".validate": "newData.isNumber() && newData.val() == now && !data.exists()"
            },
            "timestampDone": {
              ".validate": "newData.isNumber() && newData.val() == now"
            },
            "followUp": {
              ".write": "auth.token.coordinator === true"
            }
          },
          "soundQualityReporting": {
            "timestampGiven": {
              ".validate": "newData.isNumber() && newData.val() == now && !data.exists()"
            },
            "timestampDone": {
              ".validate": "newData.isNumber() && newData.val() == now"
            },
            "followUp": {
              ".write": "auth.token.coordinator === true"
            }
          }
        }
      }
    },
    "sound-editing": {
      ".read": "auth.token.coordinator === true",
      "restoration": {
        "quality-check": {
          "feedback": {
            "$push_id": {
              ".write": "!data.exists()"
            }
          }
        }
      },
      "tasks": {
        "$list": {
          "$task_id": {
            "restoration": {
              "followUp": {
                ".write": "auth.token.coordinator === true"
              }
            }
          }
        }
      }
    },
    "sqr": {
      ".read": "auth.token.coordinator === true",
      "submissions": {
        ".indexOn": ["assignee/emailAddress", "completed"],
        ".write": "!data.exists()"
      }
    },
    "users": {
      ".read": "auth.token.coordinator === true",
      ".indexOn": [
        "emailAddress",
        "roles/CR",
        "roles/SQR",
        "roles/SE",
        "uploadCode"
      ],
      "$user": {
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() == now"
        },
        "isAvailableOnWhatsApp": {
          ".validate": "newData.isBoolean()"
        },
        "notes": {
          ".write": "auth.token.coordinator === true"
        },
        "emailAddress": {
          ".write": "!data.exists()"
        },
        "languages": {
          "$langeName": {
            ".validate": "newData.isBoolean()"
          }
        },
        "status": {
          ".write": "auth.token.coordinator === true"
        },
        "roles": {
          ".write": "auth.token.coordinator === true",
          "$roleId": {
            ".validate": "newData.isBoolean()"
          }
        }
      }
    },
    "submissions": {
      "soundQualityReporting": {
        "$list": {
          "$fileName": {
            "$token": {
              ".read": true,
              ".write": "newData.exists() && root.child('original').child($list).child($fileName).child('soundQualityReporting').child('token').val() == $token && root.child('original').child($list).child($fileName).child('soundQualityReporting').child('status').val() != 'Done'",
              "complete": {
                ".validate": "!data.exists()"
              },
              "created": {
                ".validate": "!data.exists()"
              }
            }
          }
        }
      }
    }
  }
}
