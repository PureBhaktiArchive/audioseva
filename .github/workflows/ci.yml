#
# sri sri guru gauranga jayatah
#

name: Continuous Integration
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and test (${{ matrix.project }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [frontend, functions, gas, cli]
        node: [16]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Cache NPM modules
        uses: actions/cache@v2
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: node-${{ matrix.node }}-${{ runner.os }}-${{ matrix.project }}-${{ hashFiles(format('{0}/package-lock.json', matrix.project)) }}
          restore-keys: |
            node-${{ matrix.node }}-${{ runner.os }}-

      - run: npm ci
        working-directory: ${{ matrix.project }}
      # prettier should be called after installing dependencies so that proper version be picked
      - run: npx prettier --check .
        working-directory: ${{ matrix.project }}
      - run: npm run lint --if-present -- --no-fix
        working-directory: ${{ matrix.project }}
      - run: npm run build --if-present
        working-directory: ${{ matrix.project }}
      - run: npm run test --if-present -- --ci
        working-directory: ${{ matrix.project }}

  create_deployment:
    name: Create deployment
    needs: build
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'deploy:staging')
    steps:
      - name: Create deployment
        uses: maxkomarychev/oction-create-deployment@v0.7.1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          ref: ${{ github.head_ref }}
          environment: staging
          required_contexts: <<EMPTY>>
          description: Deploying PR#${{ github.event.number }} from ${{ github.workflow }}
